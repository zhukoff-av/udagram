## Assuming the .travis.yml file is in the project directory, and there is a separate sub-directory for each service
## Use either `docker-compose` or individual `docker build` commands
## Build
#- docker build -t udagram-api-feed ./udagram-api-feed
#- docker build -t udagram-api-user ./udagram-api-user
#- docker build -t udagram-frontend ./udagram-frontend
#- docker build -t udagram-reverseproxy ./udagram-reverseproxy
## Tagging
#- docker tag udagram-api-feed anzhukov/udagram-api-feed:v1
#- docker tag udagram-api-user anzhukov/udagram-api-user:v1
#- docker tag udagram-frontend anzhukov/udagram-frontend:v1
#- docker tag udagram-reverseproxy anzhukov/udagram-reverseproxy:v1
## Push
## Assuming DOCKER_PASSWORD and DOCKER_USERNAME are set in the Travis repository settings
#- echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#- docker push anzhukov/udagram-api-feed:v1
#- docker push anzhukov/udagram-api-user:v1
#- docker push anzhukov/udagram-frontend:v1
#- docker push anzhukov/udagram-reverseproxy:v1


language: node_js
node_js:
  - 13

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  - docker build -t simple-node .
  - docker tag simple-node anzhukov/simple-node:latest

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push anzhukov/simple-node
